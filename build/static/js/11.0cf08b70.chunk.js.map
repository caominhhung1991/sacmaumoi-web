{"version":3,"sources":["views/Pages/Settings/Settings.js"],"names":["Settings","_Component","_getPrototypeOf2","_this","Object","_Users_mac_Public_SACMAUMOI_project_sacmaumoi_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_len","arguments","length","args","Array","_key","_Users_mac_Public_SACMAUMOI_project_sacmaumoi_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_mac_Public_SACMAUMOI_project_sacmaumoi_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","apply","concat","state","changeDeliveryMessage","e","name","target","value","setState","_Users_mac_Public_SACMAUMOI_project_sacmaumoi_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","onSaveDeliveryMessage","settingsForm","props","email","firebase","auth","currentUser","isEmpty","deliveryMessage","modifiedAt","Date","getTime","modifiedBy","addDeliveryMessage","toast","error","_Users_mac_Public_SACMAUMOI_project_sacmaumoi_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","_Users_mac_Public_SACMAUMOI_project_sacmaumoi_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","getDeliveryMessage","_this$props","pristine","submitting","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","reactstrap__WEBPACK_IMPORTED_MODULE_7__","sm","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","redux_form__WEBPACK_IMPORTED_MODULE_15__","component","row","reactstrap__WEBPACK_IMPORTED_MODULE_13__","disabled","color","onClick","Component","enhanlers","compose","withFirebase","connect","getFormValues","SETTINGS","SETTINGS_FORM","settings","reduxForm","form"],"mappings":"oWAYaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAKEQ,MAAQ,GALVf,EAQEgB,sBAAwB,SAACC,GACvB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MACvBpB,EAAKqB,SAALpB,OAAAqB,EAAA,EAAArB,CAAA,GAAiBiB,EAAOE,KAX5BpB,EAsBEuB,sBAAwB,WAAM,IACpBC,EAAiBxB,EAAKyB,MAAtBD,aACmCE,EAAgB1B,EAAKyB,MAAxDE,SAAYC,KAAQC,YAAeH,MAC3C,GAAKF,IAAgBM,kBAAQN,EAAaO,iBAA1C,CAIA,IAAMA,EAAkB,CACtBA,gBAAiBP,EAAaO,gBAC9BC,YAAY,IAAIC,MAAOC,UACvBC,WAAYT,GAGd1B,EAAKyB,MAAMW,mBAAmB,CAAEL,yBAT9BM,QAAMC,MAAM,wEA1BlBtC,EAAA,OAAAC,OAAAsC,EAAA,EAAAtC,CAAAJ,EAAAC,GAAAG,OAAAuC,EAAA,EAAAvC,CAAAJ,EAAA,EAAA4C,IAAA,qBAAArB,MAAA,eAAAqB,IAAA,oBAAArB,MAAA,WAmBIjB,KAAKsB,MAAMiB,uBAnBf,CAAAD,IAAA,SAAArB,MAAA,WAsCW,IAAAuB,EAC0BxC,KAAKsB,MAA9BmB,EADDD,EACCC,SAAUC,EADXF,EACWE,WAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,GAAG,KACNL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACK,EAAA,EAAD,6BACAP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,wCACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOR,UAAU,eAAeS,UAAU,WAAWC,IAAK,EAAGzC,KAAK,oBAClE4B,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQC,SAAUjB,GAAYC,EAAYI,UAAU,OAAOa,MAAM,UAAUC,QAAS5D,KAAKoB,uBAAzF,qBAjDhB1B,EAAA,CAA8BmE,aAmExBC,EAAYC,YAChBC,IACAC,YATsB,SAAArD,GACtB,MAAO,CACLS,aAAc6C,YAAcC,IAASC,cAAvBF,CAAsCtD,GACpDgB,gBAAiBhB,EAAMyD,SAASzC,kBAMT,CAAEK,uBAAoBM,yBAC/C+B,YAAU,CAAEC,KAAMJ,IAASC,iBAGdN,YAAUpE","file":"static/js/11.0cf08b70.chunk.js","sourcesContent":["import React, { Component } from 'react'\n// import PropTypes from 'prop-types'\nimport { FormGroup, Col, Card, CardHeader, CardBody, Label, Button } from 'reactstrap';\nimport { compose } from 'recompose';\nimport { reduxForm, Field, getFormValues } from 'redux-form';\nimport { SETTINGS } from 'constants/Constants';\nimport { connect } from 'react-redux';\nimport { addDeliveryMessage, getDeliveryMessage } from './SettingsReducers';\nimport { isEmpty } from 'lodash';\nimport { toast } from 'react-toastify';\nimport { withFirebase } from 'Helpers/Firebase';\n\nexport class Settings extends Component {\n  static propTypes = {\n\n  }\n\n  state = {\n  }\n\n  changeDeliveryMessage = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n  }\n\n  componentWillMount() {\n    // this.props.getDeliveryMessage();\n  }\n\n  componentDidMount() {\n    this.props.getDeliveryMessage();\n  }\n\n  onSaveDeliveryMessage = () => {\n    const { settingsForm } = this.props;\n    const { firebase: { auth: { currentUser: { email } } } } = this.props;\n    if (!settingsForm || isEmpty(settingsForm.deliveryMessage)) {\n      toast.error('Tin nhắn không được để trống.')\n      return\n    };\n    const deliveryMessage = {\n      deliveryMessage: settingsForm.deliveryMessage,\n      modifiedAt: new Date().getTime(),\n      modifiedBy: email,\n    }\n\n    this.props.addDeliveryMessage({ deliveryMessage });\n  }\n\n  render() {\n    const { pristine, submitting } = this.props;\n    return (\n      <div className=\"mt-3\">\n        <Col sm='6'>\n          <Card>\n            <CardHeader>Cài đặt</CardHeader>\n            <CardBody>\n              <FormGroup>\n                <Label>Tin nhắn nhận hàng</Label>\n                <Field className=\"form-control\" component=\"textarea\" row={3} name=\"deliveryMessage\" />\n                <Button disabled={pristine || submitting} className=\"mt-2\" color=\"success\" onClick={this.onSaveDeliveryMessage}>Lưu</Button>\n              </FormGroup>\n            </CardBody>\n          </Card>\n        </Col>\n\n      </div >\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    settingsForm: getFormValues(SETTINGS.SETTINGS_FORM)(state),\n    deliveryMessage: state.settings.deliveryMessage,\n  }\n}\n\nconst enhanlers = compose(\n  withFirebase,\n  connect(mapStateToProps, { addDeliveryMessage, getDeliveryMessage }),\n  reduxForm({ form: SETTINGS.SETTINGS_FORM }),\n)\n\nexport default enhanlers(Settings)\n"],"sourceRoot":""}